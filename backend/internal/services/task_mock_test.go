// Code generated by MockGen. DO NOT EDIT.
// Source: task.go
//
// Generated by this command:
//
//	mockgen -source=task.go -destination=task_mock_test.go -package=services
//

// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTaskInterface is a mock of TaskInterface interface.
type MockTaskInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTaskInterfaceMockRecorder
}

// MockTaskInterfaceMockRecorder is the mock recorder for MockTaskInterface.
type MockTaskInterfaceMockRecorder struct {
	mock *MockTaskInterface
}

// NewMockTaskInterface creates a new mock instance.
func NewMockTaskInterface(ctrl *gomock.Controller) *MockTaskInterface {
	mock := &MockTaskInterface{ctrl: ctrl}
	mock.recorder = &MockTaskInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskInterface) EXPECT() *MockTaskInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTaskInterface) Create() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create")
}

// Create indicates an expected call of Create.
func (mr *MockTaskInterfaceMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTaskInterface)(nil).Create))
}

// Get mocks base method.
func (m *MockTaskInterface) Get() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Get")
}

// Get indicates an expected call of Get.
func (mr *MockTaskInterfaceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTaskInterface)(nil).Get))
}

// GetAll mocks base method.
func (m *MockTaskInterface) GetAll() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAll")
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTaskInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTaskInterface)(nil).GetAll))
}

// Update mocks base method.
func (m *MockTaskInterface) Update() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update")
}

// Update indicates an expected call of Update.
func (mr *MockTaskInterfaceMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTaskInterface)(nil).Update))
}
